!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.returnExports=e()}("undefined"!=typeof self?self:this,function(){const t={stringToArray:function(e){if(null==e)return"";let n=[];for(let t=0;t<e.length;t++)n.push(e[t]);return n},duplicateArray:function(e){if(null==e)return[];let n=[];for(let t=0;t<e.length;t++)n.push(e[t]);return n},hex:{}};return t.hex.convertFromString=n=>{if(null==n)return"";let r="";for(let e=0;e<n.length;e++){let t=n.charCodeAt(e).toString(16);for(;t.length<2;)t="0"+t;r+=t}return r},t.hex.convertToString=e=>{if(null==e)return"";let n="";for(let t=0;t<e.length;t+=2)n+=String.fromCharCode(parseInt(e.substring(t,t+2),16));return n},t.hex.convertFromBytes=e=>{if(null==e||!(e instanceof Uint8Array))return"";let n="";for(let t=0;t<e.length;t++)0==e[t].toString(16).length?n+="00":1==e[t].toString(16).length?n+="0"+e[t].toString(16):n+=e[t].toString(16);return n},t.hex.convertToBytes=e=>{if(null==e)return new Uint8Array;let n=new Uint8Array(e.length/2);for(let t=0;t<e.length;t+=2)n[t/2]=parseInt(e.substring(t,t+2),16);return n},t});
//# sourceMappingURL=helpful.min.js.map