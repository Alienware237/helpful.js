!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.returnExports=e()}("undefined"!=typeof self?self:this,function(){const t={stringToArray:function(e){if(null==e)return"";let r=[];for(let t=0;t<e.length;t++)r.push(e[t]);return r},duplicateArray:function(e){if(null==e)return[];let r=[];for(let t=0;t<e.length;t++)r.push(e[t]);return r},differenceOfArrays:(t,e)=>null==t||null==e?[]:t.filter(t=>!e.includes(t)),sumOfArrays:(e,r)=>{if(null==e||null==r)return[];let n=[];for(let t=0;t<e.length;t++)n.push(e[t]);for(let t=0;t<r.length;t++)n.push(r[t]);return n},hex:{}};return t.hex.convertFromString=r=>{if(null==r)return"";let n="";for(let e=0;e<r.length;e++){let t=r.charCodeAt(e).toString(16);for(;t.length<2;)t="0"+t;n+=t}return n},t.hex.convertToString=e=>{if(null==e)return"";let r="";for(let t=0;t<e.length;t+=2)r+=String.fromCharCode(parseInt(e.substring(t,t+2),16));return r},t.hex.convertFromBytes=e=>{if(null==e||!(e instanceof Uint8Array))return"";let r="";for(let t=0;t<e.length;t++)0==e[t].toString(16).length?r+="00":1==e[t].toString(16).length?r+="0"+e[t].toString(16):r+=e[t].toString(16);return r},t.hex.convertToBytes=e=>{if(null==e)return new Uint8Array;let r=new Uint8Array(e.length/2);for(let t=0;t<e.length;t+=2)r[t/2]=parseInt(e.substring(t,t+2),16);return r},t});
//# sourceMappingURL=helpful.min.js.map